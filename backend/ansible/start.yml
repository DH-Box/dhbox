---
# - uses the ec2 and ec2_vol module.
#
# Run this with ansible-playbook and supply the private key for your
# EC2 user (to access the instance in the second play), e.g:
# 
# ansible-playbook start.yml -v --private-key=/path/to/ec2/pri/key
#
# requires outside variables "users" and "admin"
# The play operates on the local (Ansible control) machine.
- name: Stage instance(s)
  hosts: local
  connection: local
  gather_facts: false
  # user: root

  vars:
      keypair: stevess
      instance_type: t1.micro
      security_group: default
      image: ami-d3675dba
      region: us-east-1
      instance_tags: {"group":"dhbox", "Name":admin}

  # Launch 1 instance with the following parameters.  Register the output.

  tasks:
    - name: Launch instance 
      ec2: keypair={{keypair}} group={{security_group}}
           instance_type={{instance_type}} image={{image}}
           wait=true count=1 region={{region}} instance_tags="{{instance_tags}}"
      register: ec2

    # Use with_items to add each instances public IP to a new hostgroup for use in the next play.

    # - name: Add instance to local host group
    #   local_action: lineinfile dest=hosts regexp="^{{ item.public_dns_name }}" insertafter="[dhbox]" line="{{ item.public_dns_name }} ansible_ssh_private_key_file=~/.ssh/{{ keypair }}.pem"
    #   with_items: ec2.instances
    #   #"

    - name: Add new instances to host group
      add_host: hostname={{item.public_ip}} groupname=new_dhbox
      with_items: ec2.instances

    - name: Wait for the instances to boot by checking the ssh port
      wait_for: host={{item.public_dns_name}} port=22 delay=20 timeout=320 state=started
      with_items: ec2.instances
          # Use the ec2_vol module to create volumes for attachment to each instance.
          # Use with_items to attach to each instance (by returned id) launched previously.

          # - name: Create a volume and attach
          #   ec2_vol: volume_size=20 instance={{item.id}} region={{region}}
          #   with_items: ec2.instances


# This play targets the new host group
- name: Configure instance
  hosts: new_dhbox
  user: admin
  sudo: true


# Install stuff

  tasks:
    # - name: install mail
    #   apt: pkg=sendmail state=latest update_cache=yes
    # - name: email?
    #   command: echo "Body" | mailx -r "hello@dhbox.org" -s "SUBJECT" "srzweibel@gmail.com"
    - include: setup.yml
    - name: set users!
      user: name={{ item.name }} state=present password={{ item.password }}
      with_items: users
    - include: mallet.yml
      vars:
        malletdir: /dhbox/mallet
    - include: rstudio.yml
    - include: omeka.yml
      vars:
        omekadir: /home/admin/omeka
  handlers:
   - name: restart apache2
     service: name=apache2 state=restarted